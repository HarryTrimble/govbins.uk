{"version":3,"file":"static/webpack/static/development/pages/index.js.ebfee59a65bc4d446855.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import fetch from 'node-fetch'\nimport Head from \"next/head\";\nimport binsData from \"../src/bins\"\nimport Bin from \"../components/bin\"\nimport React from \"react\";\nimport A from \"../components/a\"\nimport P from \"../components/p\"\n\nconst engAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-eng.register.gov.uk/records.json?page-size=500')\n}\n\nconst welshAuthorityCodes = async () => {\n  return await fetchCodes('https://principal-local-authority.register.gov.uk/records.json?page-size=500')\n}\n\nconst scotAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-sct.register.gov.uk/records.json?page-size=500')\n}\n\nconst niAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-nir.register.gov.uk/records.json?page-size=500')\n}\n\nconst fetchCodes = async (url) => {\n  let codes = {}\n\n  try {\n    const response = await fetch(url);\n    const results = await response.json();\n    for (var localAuthorityCode in results) {\n      codes[localAuthorityCode] = results[localAuthorityCode]['item'][0]['name'];\n    }\n  }\n  catch (e) { return null }\n\n  return codes\n}\n\nexport async function getStaticProps() {\n  const eng = engAuthorityCodes()\n  const wales = welshAuthorityCodes()\n  const scot = scotAuthorityCodes()\n  const ni = niAuthorityCodes()\n  return {\n    props: {\n      engAuthorityCodes: await eng,\n      welshAuthorityCodes: await wales,\n      scotAuthorityCodes: await scot,\n      niAuthorityCodes: await ni,\n    }\n  }\n}\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bins: { ...binsData.bins },\n    }\n  }\n\n  renderBin(key, binData) {\n    let councilName\n    switch (binData.localAuthorityCountry) {\n      case \"eng\":\n        councilName = this.props.engAuthorityCodes[binData.localAuthorityCode]\n        break;\n      case \"sct\":\n        councilName = this.props.scotAuthorityCodes[binData.localAuthorityCode]\n        break;\n      case \"wls\":\n        councilName = this.props.welshAuthorityCodes[binData.localAuthorityCode]\n        break;\n      default:\n        councilName = \"\";\n    }\n\n    return (\n      <Bin\n        key={key}\n        councilName={councilName}\n        {...binData}\n      />\n    )\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Head>\n          <meta charSet=\"utf-8\" />\n          <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n          <title>#govbins</title>\n\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:url\" content=\"http://govbins.uk/\" />\n          <meta property=\"og:title\" content=\"#govbins\" />\n          <meta property=\"og:description\" content=\"Cataloguing a nation's bins\" />\n          <meta property=\"og:image\" content=\"http://govbins.uk/images/preview-card.png\" />\n\n          <meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <meta property=\"twitter:url\" content=\"http://govbins.uk/\" />\n          <meta property=\"twitter:title\" content=\"#govbins\" />\n          <meta property=\"twitter:description\" content=\"Cataloguing a nation's bins\" />\n          <meta property=\"twitter:image\" content=\"http://govbins.uk/images/preview-card.png\" />\n\n          <link href=\"https://fonts.googleapis.com/css?family=Rubik\" rel=\"stylesheet\" />\n        </Head>\n\n        <section className=\"grid grid-cols-2 lg:grid-cols-4\">\n          {binsData.bins.map((bin, index) => {\n            return this.renderBin(index, bin)\n          })}\n        </section>\n        <footer className=\"mt-40\">\n          <P>\n            Â© <A href=\"http://www.harrytrimble.co.uk/\" target=\"_blank\">Harry Trimble</A> {new Date().getFullYear()}\n          </P>\n        </footer>\n      </React.Fragment>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+CA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AACA;AAaxEA;AACA;;;;;;A","sourceRoot":""}