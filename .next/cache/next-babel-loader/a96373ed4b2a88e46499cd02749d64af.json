{"ast":null,"code":"var _jsxFileName = \"/Users/tommypalmer/Code/govbins.uk/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'node-fetch';\nimport Head from \"next/head\";\nimport binsData from \"../src/bins\";\nimport Bin from \"../components/bin\";\n\nconst engAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-eng.register.gov.uk/records.json?page-size=500');\n};\n\nconst welshAuthorityCodes = async () => {\n  return await fetchCodes('https://principal-local-authority.register.gov.uk/records.json?page-size=500');\n};\n\nconst scotAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-sct.register.gov.uk/records.json?page-size=500');\n};\n\nconst niAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-nir.register.gov.uk/records.json?page-size=500');\n};\n\nconst fetchCodes = async url => {\n  let codes = {};\n\n  try {\n    const response = await fetch(url);\n    const results = await response.json();\n\n    for (var localAuthorityCode in results) {\n      codes[localAuthorityCode] = results[localAuthorityCode]['item'][0]['name'];\n    }\n  } catch (e) {}\n\n  return codes;\n};\n\nexport async function getStaticProps(context) {\n  const eng = engAuthorityCodes();\n  const wales = welshAuthorityCodes();\n  const scot = scotAuthorityCodes();\n  const ni = niAuthorityCodes();\n  return {\n    props: {\n      engAuthorityCodes: await eng,\n      welshAuthorityCodes: await wales,\n      scotAuthorityCodes: await scot,\n      niAuthorityCodes: await ni\n    }\n  };\n}\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bins: _objectSpread({}, binsData.bins)\n    };\n  }\n\n  renderBin(key, binData) {\n    debugger;\n    let councilName;\n\n    switch (binData.localAuthorityCountry) {\n      case \"eng\":\n        councilName = this.props.engAuthorityCodes[binData.localAuthorityCode];\n\n      case \"sct\":\n        councilName = this.props.scotAuthorityCodes[binData.localAuthorityCode];\n\n      case \"wls\":\n        councilName = this.props.welshAuthorityCodes[binData.localAuthorityCode];\n\n      default:\n        councilName = \"\";\n    }\n\n    return __jsx(Bin, _extends({\n      key: key\n    }, binData, {\n      councilName: councilName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      httpEquiv: \"X-UA-Compatible\",\n      content: \"IE=edge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"#govbins\"), __jsx(\"meta\", {\n      property: \"og:type\",\n      content: \"website\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:url\",\n      content: \"http://govbins.uk/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: \"#govbins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: \"Cataloguing a nation's bins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"og:image\",\n      content: \"http://govbins.uk/images/preview-card.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"twitter:card\",\n      content: \"summary_large_image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"twitter:url\",\n      content: \"http://govbins.uk/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"twitter:title\",\n      content: \"#govbins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"twitter:description\",\n      content: \"Cataloguing a nation's bins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      property: \"twitter:image\",\n      content: \"http://govbins.uk/images/preview-card.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Rubik\",\n      rel: \"stylesheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })), __jsx(\"section\", {\n      className: \"grid grid-cols-2 lg:grid-cols-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, binsData.bins.map((bin, index) => {\n      return this.renderBin(index, bin);\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/tommypalmer/Code/govbins.uk/pages/index.js"],"names":["fetch","Head","binsData","Bin","engAuthorityCodes","fetchCodes","welshAuthorityCodes","scotAuthorityCodes","niAuthorityCodes","url","codes","response","results","json","localAuthorityCode","e","getStaticProps","context","eng","wales","scot","ni","props","React","Component","constructor","state","bins","renderBin","key","binData","councilName","localAuthorityCountry","render","map","bin","index"],"mappings":"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","sourcesContent":["import fetch from 'node-fetch'\nimport Head from \"next/head\";\nimport binsData from \"../src/bins\"\nimport Bin from \"../components/bin\"\n\nconst engAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-eng.register.gov.uk/records.json?page-size=500')\n}\n\nconst welshAuthorityCodes = async () => {\n  return await fetchCodes('https://principal-local-authority.register.gov.uk/records.json?page-size=500')\n}\n\nconst scotAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-sct.register.gov.uk/records.json?page-size=500')\n}\n\nconst niAuthorityCodes = async () => {\n  return await fetchCodes('https://local-authority-nir.register.gov.uk/records.json?page-size=500')\n}\n\nconst fetchCodes = async (url) => {\n  let codes = {}\n\n  try {\n    const response = await fetch(url);\n    const results = await response.json();\n    for (var localAuthorityCode in results) {\n      codes[localAuthorityCode] = results[localAuthorityCode]['item'][0]['name'];\n    }\n  }\n  catch (e) { }\n\n  return codes\n}\n\nexport async function getStaticProps(context) {\n  const eng = engAuthorityCodes()\n  const wales = welshAuthorityCodes()\n  const scot = scotAuthorityCodes()\n  const ni = niAuthorityCodes()\n  return {\n    props: {\n      engAuthorityCodes: await eng,\n      welshAuthorityCodes: await wales,\n      scotAuthorityCodes: await scot,\n      niAuthorityCodes: await ni,\n    }\n  }\n}\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bins: { ...binsData.bins },\n    }\n  }\n\n  renderBin(key, binData) {\n    debugger\n    let councilName\n    switch (binData.localAuthorityCountry) {\n      case \"eng\":\n        councilName = this.props.engAuthorityCodes[binData.localAuthorityCode]\n      case \"sct\":\n        councilName = this.props.scotAuthorityCodes[binData.localAuthorityCode]\n      case \"wls\":\n        councilName = this.props.welshAuthorityCodes[binData.localAuthorityCode]\n      default:\n        councilName = \"\";\n    }\n\n    return (\n      <Bin\n        key={key}\n        {...binData}\n        councilName={councilName}\n      />\n    )\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Head>\n          <meta charSet=\"utf-8\" />\n          <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n          <title>#govbins</title>\n\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:url\" content=\"http://govbins.uk/\" />\n          <meta property=\"og:title\" content=\"#govbins\" />\n          <meta property=\"og:description\" content=\"Cataloguing a nation's bins\" />\n          <meta property=\"og:image\" content=\"http://govbins.uk/images/preview-card.png\" />\n\n          <meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <meta property=\"twitter:url\" content=\"http://govbins.uk/\" />\n          <meta property=\"twitter:title\" content=\"#govbins\" />\n          <meta property=\"twitter:description\" content=\"Cataloguing a nation's bins\" />\n          <meta property=\"twitter:image\" content=\"http://govbins.uk/images/preview-card.png\" />\n\n          <link href=\"https://fonts.googleapis.com/css?family=Rubik\" rel=\"stylesheet\" />\n        </Head>\n\n        <section className=\"grid grid-cols-2 lg:grid-cols-4\">\n          {binsData.bins.map((bin, index) => {\n            return this.renderBin(index, bin)\n          })}\n        </section>\n      </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}